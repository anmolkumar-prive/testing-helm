name: Release Helm chart

on:
  pull_request:
    branches:
      - main
  pull_request_target:
    types: [closed]

permissions:
  contents: write
  pull-requests: write

env:
  DEFAULT_MODULE_VERSION: "0.1.0"
  HELM_VERSION: 3.10.0

jobs:

  generate-matrix:
    name: Generate matrix
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.changed-directories.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed Helm chart directories
        id: changed-directories
        run: |
          list_changed_files=$(git diff --name-only origin/main...HEAD)
          declare -a matrix
          for file in $list_changed_files; do
            dir=$(dirname "$file")
            if [ -f "$dir/Chart.yaml" ]; then
              module_name=$(echo "$dir" | sed 's/\//_/g')
              matrix+="{\"module_name\": \"$module_name\", \"module_path\": \"$dir\"},"
            fi
          done
          if [ -z "$matrix" ]; then
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
          else
            echo "matrix={\"include\":[${matrix%,}]}" >> $GITHUB_OUTPUT
          fi

  preview-helm-charts:
    needs: [generate-matrix]
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    name: Preview Helm Chart Packaging
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Preview Helm Chart packaging
        run: |
          cd ${{ matrix.module_path }}
          helm package .
          helm repo index --merge ../packages/index.yaml .
          mv ./*.tgz index.yaml ../packages/

      - name: Commit preview chart
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd packages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "Preview Helm chart for ${{ matrix.module_name }}"
            git push origin HEAD:${{ github.head_ref }}
          else
            echo "No changes"
          fi

  package-helm-charts:
    needs: generate-matrix
    runs-on: ubuntu-22.04
    if: github.event.pull_request.merged == true
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Get version from Chart.yaml
        id: get_version
        run: |
          version=$(grep '^version:' ${{ matrix.module_path }}/Chart.yaml | head -1 | sed 's/version:[[:space:]]*//')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create git tag from Chart version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          tag="${{ matrix.module_name }}-${{ steps.get_version.outputs.version }}"
          if git rev-parse "$tag" >/dev/null 2>&1; then
            echo "Tag $tag already exists, skipping."
          else
            git tag -a "$tag" -m "Release $tag"
            git push origin "$tag"
          fi

      - name: Package Helm chart
        run: |
          cd ${{ matrix.module_path }}
          helm package . --version ${{ steps.get_version.outputs.version }}
          helm repo index --merge ../packages/index.yaml .
          mv ./*.tgz index.yaml ../packages/

      - name: Commit and push packaged charts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd packages
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "Release ${{ matrix.module_name }} version ${{ steps.get_version.outputs.version }}"
            git push
          else
            echo "No changes to commit"
          fi
          